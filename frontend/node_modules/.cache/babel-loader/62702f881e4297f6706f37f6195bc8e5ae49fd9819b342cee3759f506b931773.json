{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mseo2\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\Project ENG\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\"; // react-markdown 추가\nimport \"./App.css\"; // CSS 파일을 임포트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STR = \"The old clock in the dusty attic chimed thirteen times, startling a family of squirrels nesting in the eaves\";\nfunction App() {\n  _s();\n  // 사용자 입력을 저장할 상태 변수 설정\n  const [inputValue, setInputValue] = useState(\"\");\n  const [responseMessage, setResponseMessage] = useState(\"\"); // 백엔드 응답 메시지 상태\n\n  // 입력값이 변경될 때 호출되는 함수\n  const handleChange = event => {\n    setInputValue(event.target.value); // 입력값 업데이트\n  };\n\n  // 입력값을 백엔드로 보내는 함수\n  const handleSubmit = async event => {\n    event.preventDefault(); // 기본 제출 동작 방지\n    try {\n      const response = await fetch(\"http://localhost:5000/api\", {\n        method: \"POST\",\n        // POST 요청\n        headers: {\n          \"Content-Type\": \"application/json\" // JSON 형식으로 요청\n        },\n        body: JSON.stringify({\n          input: \" \" + inputValue\n        }) // 입력값을 JSON 형식으로 보내기\n      });\n      if (response.ok) {\n        const data = await response.json(); // JSON 응답 받기\n        setResponseMessage(data.message); // 서버 응답을 상태로 설정\n      } else {\n        setResponseMessage(\"서버 응답 오류\");\n      }\n    } catch (error) {\n      console.error(\"서버로 데이터 전송 실패:\", error);\n      setResponseMessage(\"서버로 데이터 전송 실패.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"english-sentence-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: STR\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC704 \\uBB38\\uC7A5\\uC758 \\uB73B\\uC744 \\uC785\\uB825\\uD574\\uBCF4\\uC138\\uC694!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue // input 값은 상태로 관리\n        ,\n        onChange: handleChange // 입력값이 변경될 때마다 호출되는 함수\n        ,\n        placeholder: \"\\uC5EC\\uAE30\\uC5D0 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"\\uC804\\uC1A1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"markdown-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"markdown-output\",\n        children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          children: responseMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"T0t+s5gvE5a6MWAsS4d+eytB3Hw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ReactMarkdown","jsxDEV","_jsxDEV","STR","App","_s","inputValue","setInputValue","responseMessage","setResponseMessage","handleChange","event","target","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","input","ok","data","json","message","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/mseo2/OneDrive/바탕 화면/Project ENG/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\"; // react-markdown 추가\nimport \"./App.css\"; // CSS 파일을 임포트\n\nconst STR =\n  \"The old clock in the dusty attic chimed thirteen times, startling a family of squirrels nesting in the eaves\";\nfunction App() {\n  // 사용자 입력을 저장할 상태 변수 설정\n  const [inputValue, setInputValue] = useState(\"\");\n  const [responseMessage, setResponseMessage] = useState(\"\"); // 백엔드 응답 메시지 상태\n\n  // 입력값이 변경될 때 호출되는 함수\n  const handleChange = (event) => {\n    setInputValue(event.target.value); // 입력값 업데이트\n  };\n\n  // 입력값을 백엔드로 보내는 함수\n  const handleSubmit = async (event) => {\n    event.preventDefault(); // 기본 제출 동작 방지\n    try {\n      const response = await fetch(\"http://localhost:5000/api\", {\n        method: \"POST\", // POST 요청\n        headers: {\n          \"Content-Type\": \"application/json\", // JSON 형식으로 요청\n        },\n        body: JSON.stringify({\n          input: \" \" + inputValue,\n        }), // 입력값을 JSON 형식으로 보내기\n      });\n\n      if (response.ok) {\n        const data = await response.json(); // JSON 응답 받기\n        setResponseMessage(data.message); // 서버 응답을 상태로 설정\n      } else {\n        setResponseMessage(\"서버 응답 오류\");\n      }\n    } catch (error) {\n      console.error(\"서버로 데이터 전송 실패:\", error);\n      setResponseMessage(\"서버로 데이터 전송 실패.\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"english-sentence-container\">\n        <p>{STR}</p> {/* 예시 문장 */}\n      </div>\n      <h1>위 문장의 뜻을 입력해보세요!</h1>\n      <form onSubmit={handleSubmit} className=\"form-container\">\n        <input\n          type=\"text\"\n          value={inputValue} // input 값은 상태로 관리\n          onChange={handleChange} // 입력값이 변경될 때마다 호출되는 함수\n          placeholder=\"여기에 입력하세요\"\n          className=\"input-field\"\n        />\n        <button type=\"submit\" className=\"submit-button\">\n          전송\n        </button>\n      </form>\n      <div className=\"markdown-container\">\n        <div className=\"markdown-output\">\n          <ReactMarkdown>{responseMessage}</ReactMarkdown>\n        </div>\n      </div>\n      {/* <p>백엔드 응답: {responseMessage}</p> 백엔드에서 받은 응답 출력 */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}